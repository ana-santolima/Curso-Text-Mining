{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ana-santolima/Curso-Text-Mining/blob/main/C4_Legibilidade_Fog_Flesh_Bog_Index.ipynb%20treino\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "dados utilizados nesse script:\n",
        "http://www.lrec-conf.org/proceedings/lrec2022/workshops/FNP/pdf/2022.fnp-1.1.pdf\n",
        "https://github.com/sohomghosh/FinRAD_Financial_Readability_Assessment_Dataset\n",
        "\n",
        "Trabalho apresentado no: Proceedings of the 4th Financial Narrative Processing Workshop @ LREC 2022, pages 1–9\n",
        "Marseille, France, 24 June 2022\n",
        "\n",
        "\n",
        "Primary Columns:\n",
        "\"terms\": This is the financial term\n",
        "\"definitions\": This is the definition corresponding to the financial term\n",
        "\"source\": This represents the source from which the term and the definition has been obtained.\n",
        "\"assigned_readability\": This is the manually assigned readability. 0 means not readable, 1 means readable.\n",
        "\n",
        "Other Columns:\n",
        "\"flesch_reading_ease\", \"flesch_kincaid_grade\", \"smog_index\", \"coleman_liau_index\", \"automated_readability_index\", \"dale_chall_readability_score\", \"linsear_write_formula\", \"gunning_fog\"\n",
        "These are readability scores extracted using the textstat library"
      ],
      "metadata": {
        "id": "j7r2Ggp9YFrN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import openpyxl\n",
        "\n",
        "df = pd.read_excel('/content/Exercicio02_FatosRelevantesPT_legibilidade.xlsx', engine='openpyxl')"
      ],
      "metadata": {
        "id": "8giYkxZvGsO6"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Obtenha as variáveis e seus tipos\n",
        "variaveis = df.columns.tolist()\n",
        "tipos = df.dtypes.tolist()\n",
        "\n",
        "# Imprima as variáveis e seus tipos\n",
        "for var, tipo in zip(variaveis, tipos):\n",
        "    print(f'{var}: {tipo}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KfwhmDwzG416",
        "outputId": "ab5224f7-5881-447c-e32e-2a636159570b"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data_Entrega: object\n",
            "Nome_Companhia: object\n",
            "Categoria: object\n",
            "Assunto: object\n",
            "Tipo: float64\n",
            "Especie: float64\n",
            "Tipo_Apresentacao: object\n",
            "Link_Download: object\n",
            "Texto: object\n",
            "texto_portugues: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 974
        },
        "id": "abI4Zqz7H6oc",
        "outputId": "85c594fb-a881-42a1-a56f-e6c5429a36f7"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Data_Entrega             Nome_Companhia       Categoria  \\\n",
              "0     2023-01-16       BANCO DO BRASIL S.A.  Fato Relevante   \n",
              "1     2023-01-19       BANCO DO BRASIL S.A.  Fato Relevante   \n",
              "2     2023-01-19       BANCO DO BRASIL S.A.  Fato Relevante   \n",
              "3     2023-01-20       BANCO DO BRASIL S.A.  Fato Relevante   \n",
              "4     2023-01-25       BANCO DO BRASIL S.A.  Fato Relevante   \n",
              "..           ...                        ...             ...   \n",
              "939   2023-01-31  PACAEMBU CONSTRUTORA S.A.  Fato Relevante   \n",
              "940   2023-03-27  PACAEMBU CONSTRUTORA S.A.  Fato Relevante   \n",
              "941   2023-03-31  PACAEMBU CONSTRUTORA S.A.  Fato Relevante   \n",
              "942   2023-06-01  PACAEMBU CONSTRUTORA S.A.  Fato Relevante   \n",
              "943   2023-01-23                 DEXCO S.A.  Fato Relevante   \n",
              "\n",
              "                                               Assunto  Tipo  Especie  \\\n",
              "0         Nomeação Presidenta - Sra. Tarciana Medeiros   NaN      NaN   \n",
              "1                        Indicação de Vice-Presidentes   NaN      NaN   \n",
              "2                     Payout 2023 e datas de pagamento   NaN      NaN   \n",
              "3                         Indicação de Vice-Presidente   NaN      NaN   \n",
              "4                         Indicação de Vice-Presidente   NaN      NaN   \n",
              "..                                                 ...   ...      ...   \n",
              "939             Reestruturação da Diretoria Executiva.   NaN      NaN   \n",
              "940  Renúncia de Diretor Administrativo e Financeir...   NaN      NaN   \n",
              "941                 Eleição de Diretor de Planejamento   NaN      NaN   \n",
              "942  Nomeação do Diretor Administrativo Financeiro ...   NaN      NaN   \n",
              "943              Mudanças no Comitê Executivo da Dexco   NaN      NaN   \n",
              "\n",
              "     Tipo_Apresentacao                                      Link_Download  \\\n",
              "0    AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "1    AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "2    AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "3    AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "4    AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "..                 ...                                                ...   \n",
              "939  AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "940  AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "941  AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "942  AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "943  AP - Apresentação  https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...   \n",
              "\n",
              "                                                 Texto  \\\n",
              "0     \\n \\n \\n \\n \\n \\n \\n \\nOi S.A.  – Em Recupera...   \n",
              "1                                                  ...   \n",
              "2                                                  ...   \n",
              "3    BANCO SANTANDER (BRASIL) S.A.  \\nCompanhia Abe...   \n",
              "4     \\n  \\n \\n \\nINVESTIMENTOS E PARTICIPAÇÕES \\nE...   \n",
              "..                                                 ...   \n",
              "939   \\n \\n \\nPACAEMBU  CONSTRUTORA  S.A. \\nCNPJ/ME...   \n",
              "940   \\n \\n \\nPACAEMBU CONSTRUTORA S.A.   \\nCNPJ/ME...   \n",
              "941   \\n \\n \\nPACAEMBU CONSTRUTORA S.A.   \\nCNPJ/ME...   \n",
              "942   \\n \\n \\nPACAEMBU CONSTRUTORA S.A.   \\nCNPJ/ME...   \n",
              "943   \\n CNPJ nº 97.837.181/0001 -47 \\nCompanhia Ab...   \n",
              "\n",
              "                                       texto_portugues  \n",
              "0     – Em Recuperação Judicial  \\nCNPJ/ME nº 76.53...  \n",
              "1    \\nCNPJ/MF nº 92.754.738/0001- 62 \\nNIRE 433000...  \n",
              "2                                                  NaN  \n",
              "3     \\nCompanhia Aberta de Capital Autorizado  \\nC...  \n",
              "4    – INVEPAR  (“Invepar” \\nou “Companhia”) , em a...  \n",
              "..                                                 ...  \n",
              "939  , sociedade por ações, com sede na cidade de B...  \n",
              "940    \\nCNPJ/ME n° 96.298.013/0001 -68 \\nNIRE 35.3...  \n",
              "941    \\nCNPJ/ME n° 96.298.013/0001 -68 \\nNIRE 35.3...  \n",
              "942    \\nCNPJ/ME n° 96.298.013/0001 -68 \\nNIRE 35.3...  \n",
              "943   \\n CNPJ nº 97.837.181/0001 -47 \\nCompanhia Ab...  \n",
              "\n",
              "[944 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bb4fbfe3-4c4e-4867-8728-7c4e7356b38b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Data_Entrega</th>\n",
              "      <th>Nome_Companhia</th>\n",
              "      <th>Categoria</th>\n",
              "      <th>Assunto</th>\n",
              "      <th>Tipo</th>\n",
              "      <th>Especie</th>\n",
              "      <th>Tipo_Apresentacao</th>\n",
              "      <th>Link_Download</th>\n",
              "      <th>Texto</th>\n",
              "      <th>texto_portugues</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2023-01-16</td>\n",
              "      <td>BANCO DO BRASIL S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Nomeação Presidenta - Sra. Tarciana Medeiros</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>\\n \\n \\n \\n \\n \\n \\n \\nOi S.A.  – Em Recupera...</td>\n",
              "      <td>– Em Recuperação Judicial  \\nCNPJ/ME nº 76.53...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2023-01-19</td>\n",
              "      <td>BANCO DO BRASIL S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Indicação de Vice-Presidentes</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>...</td>\n",
              "      <td>\\nCNPJ/MF nº 92.754.738/0001- 62 \\nNIRE 433000...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023-01-19</td>\n",
              "      <td>BANCO DO BRASIL S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Payout 2023 e datas de pagamento</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023-01-20</td>\n",
              "      <td>BANCO DO BRASIL S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Indicação de Vice-Presidente</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>BANCO SANTANDER (BRASIL) S.A.  \\nCompanhia Abe...</td>\n",
              "      <td>\\nCompanhia Aberta de Capital Autorizado  \\nC...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023-01-25</td>\n",
              "      <td>BANCO DO BRASIL S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Indicação de Vice-Presidente</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>\\n  \\n \\n \\nINVESTIMENTOS E PARTICIPAÇÕES \\nE...</td>\n",
              "      <td>– INVEPAR  (“Invepar” \\nou “Companhia”) , em a...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>939</th>\n",
              "      <td>2023-01-31</td>\n",
              "      <td>PACAEMBU CONSTRUTORA S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Reestruturação da Diretoria Executiva.</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>\\n \\n \\nPACAEMBU  CONSTRUTORA  S.A. \\nCNPJ/ME...</td>\n",
              "      <td>, sociedade por ações, com sede na cidade de B...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>940</th>\n",
              "      <td>2023-03-27</td>\n",
              "      <td>PACAEMBU CONSTRUTORA S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Renúncia de Diretor Administrativo e Financeir...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>\\n \\n \\nPACAEMBU CONSTRUTORA S.A.   \\nCNPJ/ME...</td>\n",
              "      <td>\\nCNPJ/ME n° 96.298.013/0001 -68 \\nNIRE 35.3...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>941</th>\n",
              "      <td>2023-03-31</td>\n",
              "      <td>PACAEMBU CONSTRUTORA S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Eleição de Diretor de Planejamento</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>\\n \\n \\nPACAEMBU CONSTRUTORA S.A.   \\nCNPJ/ME...</td>\n",
              "      <td>\\nCNPJ/ME n° 96.298.013/0001 -68 \\nNIRE 35.3...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>942</th>\n",
              "      <td>2023-06-01</td>\n",
              "      <td>PACAEMBU CONSTRUTORA S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Nomeação do Diretor Administrativo Financeiro ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>\\n \\n \\nPACAEMBU CONSTRUTORA S.A.   \\nCNPJ/ME...</td>\n",
              "      <td>\\nCNPJ/ME n° 96.298.013/0001 -68 \\nNIRE 35.3...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>943</th>\n",
              "      <td>2023-01-23</td>\n",
              "      <td>DEXCO S.A.</td>\n",
              "      <td>Fato Relevante</td>\n",
              "      <td>Mudanças no Comitê Executivo da Dexco</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AP - Apresentação</td>\n",
              "      <td>https://www.rad.cvm.gov.br/ENET/frmDownloadDoc...</td>\n",
              "      <td>\\n CNPJ nº 97.837.181/0001 -47 \\nCompanhia Ab...</td>\n",
              "      <td>\\n CNPJ nº 97.837.181/0001 -47 \\nCompanhia Ab...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>944 rows × 10 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb4fbfe3-4c4e-4867-8728-7c4e7356b38b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bb4fbfe3-4c4e-4867-8728-7c4e7356b38b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bb4fbfe3-4c4e-4867-8728-7c4e7356b38b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#vizualiar 1175 obs\n",
        "print(df.loc[:, 'texto_portugues'].iloc[0])\n"
      ],
      "metadata": {
        "id": "QANFArZTjv9h",
        "outputId": "8954212e-1bda-4e74-aab3-2c8d9bdda9d3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " – Em Recuperação Judicial  \n",
            "CNPJ/ME nº 76.535.764/0001 -43 \n",
            "NIRE 33.3.0029520 -8 \n",
            "Companhia Aberta  \n",
            " \n",
            "FATO RELEVANTE  \n",
            " \n",
            "Oi S.A . – Em Recuperação Judicial  (“Oi” ou “ Companhia ”), em cumprimento ao \n",
            "disposto no art.  157, §4º, Lei nº 6.404/1976, e  na Resolução CVM nº 44 /21, vem informar \n",
            "aos seus acionistas e ao mercado em geral  que optou por descontinuar a divulgação \n",
            "das projeções de desempenho futuro  (“guidance ”), contemplando projeções e \n",
            "estimativas operacionais e financeiras divulgad as no Fato Relevante de 19 de julho de \n",
            "2021, tendo em vista as relevantes mudanças no cenário macroeconômico brasileiro e \n",
            "a consequente contrapartida no ambiente competitivo  e nas necessidades de \n",
            "financiamento  da Companhia . \n",
            " \n",
            "A Companhia também ressalta que as projeções contidas no Fato Relevante de 31 de \n",
            "dezembro de 2022 , sobre o Blowout  das discussões com credores , não deve m ser \n",
            "consideradas como guidance . Isso  porque tais projeções  assumem premissas da \n",
            "negociação com os credores conforme os termos da proposta apresentada no material  \n",
            "e os indicadores financeiros e operacionais  divulgados poderiam ser objeto de revisão \n",
            "de acordo com o próprio resultado des sa discussão . \n",
            " \n",
            "A Companhia manterá seu s acionistas e o mercado informados sobre o \n",
            "desenvolvimento dos assuntos objeto deste Fato Relevante.  \n",
            " \n",
            "Rio de Janeiro, 16 de janeiro de 2023 .  – Em Recuperação Judicial  \n",
            "Cristiane Barretto Sales  \n",
            "Diretora de Finanças e de Relações com Investidores  \n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "# Função para remover números de uma string\n",
        "def remover_numeros(texto):\n",
        "    return re.sub(r'\\d+', '', str(texto))\n",
        "\n",
        "# Aplicar preprocessamento\n",
        "df['texto_portugues'] = df['texto_portugues'].apply(remover_numeros)\n",
        "\n",
        "# Visualizar:\n",
        "print(df.loc[:, 'texto_portugues'].iloc[2])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yhSdf3O6ogY6",
        "outputId": "0b73395d-41a8-4e2b-950b-366751262e7b"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nan\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install textstat"
      ],
      "metadata": {
        "id": "jA03uctG6NQs",
        "outputId": "242cd3d1-78ce-4b92-f4a4-6516c903d888",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: textstat in /usr/local/lib/python3.10/dist-packages (0.7.3)\n",
            "Requirement already satisfied: pyphen in /usr/local/lib/python3.10/dist-packages (from textstat) (0.14.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "se necessário:"
      ],
      "metadata": {
        "id": "VsWuGUTtaSs6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "from textstat import textstat\n",
        "\n",
        "# Função para remover palavras específicas de uma string\n",
        "def remover_palavras(texto):\n",
        "    palavras_remover = ['FATO RELEVANTE', 'NIRE', 'CNPJ']\n",
        "    padrao = r'\\b(?:{})\\b'.format('|'.join(map(re.escape, palavras_remover)))\n",
        "    return re.sub(padrao, '', texto)\n",
        "\n",
        "# Aplicar preprocessamento\n",
        "df[''] = df['texto_portugues'].apply(remover_palavras)\n",
        "\n",
        "# Visualizar o resultado do primeiro texto\n",
        "print(df.loc[:, 'texto_portugues'].iloc[0])\n"
      ],
      "metadata": {
        "id": "bef4h5V5p4-X",
        "outputId": "e8308908-0384-41ba-ed5a-7ef696b962c8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " – Em Recuperação Judicial  \n",
            "CNPJ/ME nº ../ - \n",
            "NIRE .. - \n",
            "Companhia Aberta  \n",
            " \n",
            "FATO RELEVANTE  \n",
            " \n",
            "Oi S.A . – Em Recuperação Judicial  (“Oi” ou “ Companhia ”), em cumprimento ao \n",
            "disposto no art.  , §º, Lei nº ./, e  na Resolução CVM nº  /, vem informar \n",
            "aos seus acionistas e ao mercado em geral  que optou por descontinuar a divulgação \n",
            "das projeções de desempenho futuro  (“guidance ”), contemplando projeções e \n",
            "estimativas operacionais e financeiras divulgad as no Fato Relevante de  de julho de \n",
            ", tendo em vista as relevantes mudanças no cenário macroeconômico brasileiro e \n",
            "a consequente contrapartida no ambiente competitivo  e nas necessidades de \n",
            "financiamento  da Companhia . \n",
            " \n",
            "A Companhia também ressalta que as projeções contidas no Fato Relevante de  de \n",
            "dezembro de  , sobre o Blowout  das discussões com credores , não deve m ser \n",
            "consideradas como guidance . Isso  porque tais projeções  assumem premissas da \n",
            "negociação com os credores conforme os termos da proposta apresentada no material  \n",
            "e os indicadores financeiros e operacionais  divulgados poderiam ser objeto de revisão \n",
            "de acordo com o próprio resultado des sa discussão . \n",
            " \n",
            "A Companhia manterá seu s acionistas e o mercado informados sobre o \n",
            "desenvolvimento dos assuntos objeto deste Fato Relevante.  \n",
            " \n",
            "Rio de Janeiro,  de janeiro de  .  – Em Recuperação Judicial  \n",
            "Cristiane Barretto Sales  \n",
            "Diretora de Finanças e de Relações com Investidores  \n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "# Função para remover números de uma string\n",
        "def remover_numeros(texto):\n",
        "    return re.sub(r'\\d+', '', str(texto))\n",
        "\n",
        "# Aplicar preprocessamento\n",
        "df['texto_portugues'] = df['texto_portugues'].apply(remover_numeros)\n",
        "\n",
        "# Visualizar:\n",
        "print(df.loc[:, 'texto_portugues'].iloc[2])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cebad33b-a153-40c2-db04-63c234d75c53",
        "id": "1KNkKwEupsr7"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nan\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "# Função para remover números de uma string\n",
        "def remover_numeros(texto):\n",
        "    return re.sub(r'\\d+', '', str(texto))\n",
        "\n",
        "# Aplicar preprocessamento\n",
        "df['texto_portugues'] = df['texto_portugues'].apply(remover_numeros)\n",
        "\n",
        "# Visualizar:\n",
        "print(df.loc[:, 'texto_portugues'].iloc[2])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3dc01f78-95f0-430b-de13-136750425c76",
        "id": "AHa2--jZphfy"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nan\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "se necessário:"
      ],
      "metadata": {
        "id": "GnhTwLYdahgh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "# Função para remover padrões específicos de uma string\n",
        "def remover_padroes(texto):\n",
        "    padroes_remover = ['S.A', 'nº', '/ME', '/']\n",
        "    for padrao in padroes_remover:\n",
        "        texto = re.sub(padrao, '', texto)\n",
        "    return texto\n",
        "\n",
        "# Aplicar remoção de padrões\n",
        "df['texto_portugues'] = df['texto_portugues'].apply(remover_padroes)\n",
        "\n",
        "\n",
        "# Visualizar o resultado do primeiro texto\n",
        "print(df.loc[:, 'texto_portugues'].iloc[0])\n"
      ],
      "metadata": {
        "id": "Wa6kFnfBx7eg",
        "outputId": "d3cb9ca6-0c73-41f6-fd73-cce5245d1dfc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " – Em Recuperação Judicial  \n",
            "CNPJ  .. - \n",
            "NIRE .. - \n",
            "Companhia Aberta  \n",
            " \n",
            "FATO RELEVANTE  \n",
            " \n",
            "Oi  . – Em Recuperação Judicial  (“Oi” ou “ Companhia ”), em cumprimento ao \n",
            "disposto no art.  , §º, Lei  ., e  na Resolução CVM   , vem informar \n",
            "aos seus acionistas e ao mercado em geral  que optou por descontinuar a divulgação \n",
            "das projeções de desempenho futuro  (“guidance ”), contemplando projeções e \n",
            "estimativas operacionais e financeiras divulgad as no Fato Relevante de  de julho de \n",
            ", tendo em vista as relevantes mudanças no cenário macroeconômico brasileiro e \n",
            "a consequente contrapartida no ambiente competitivo  e nas necessidades de \n",
            "financiamento  da Companhia . \n",
            " \n",
            "A Companhia também ressalta que as projeções contidas no Fato Relevante de  de \n",
            "dezembro de  , sobre o Blowout  das discussões com credores , não deve m ser \n",
            "consideradas como guidance . Isso  porque tais projeções  assumem premissas da \n",
            "negociação com os credores conforme os termos da proposta apresentada no material  \n",
            "e os indicadores financeiros e operacionais  divulgados poderiam ser objeto de revisão \n",
            "de acordo com o próprio resultado des sa discussão . \n",
            " \n",
            "A Companhia manterá seu s acionistas e o mercado informados sobre o \n",
            "desenvolvimento dos assuntos objeto deste Fato Relevante.  \n",
            " \n",
            "Rio de Janeiro,  de janeiro de  .  – Em Recuperação Judicial  \n",
            "Cristiane Barretto Sales  \n",
            "Diretora de Finanças e de Relações com Investidores  \n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "from textstat import textstat\n",
        "\n",
        "# Aplicar preprocessamento e calcular o Fog Index no DataFrame\n",
        "df['fog_index'] = df['texto_portugues'].apply(lambda x: textstat.gunning_fog(x))\n",
        "\n",
        "# Visualizar o resultado\n",
        "print(df[['texto_portugues', 'fog_index']])\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bCeNYG5GoVar",
        "outputId": "6833c4b7-66cd-4951-b84c-c57cce28bb5f"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                       texto_portugues  fog_index\n",
            "0     – Em Recuperação Judicial  \\nCNPJ  .. - \\nNIR...      17.49\n",
            "1    \\nCNPJMF  ..-  \\nNIRE  \\nCompanhia Aberta de C...      14.85\n",
            "2                                                  nan       0.40\n",
            "3     \\nCompanhia Aberta de Capital Autorizado  \\nC...      13.85\n",
            "4    – INVEPAR  (“Invepar” \\nou “Companhia”) , em a...      15.32\n",
            "..                                                 ...        ...\n",
            "939  , sociedade por ações, com sede na cidade de B...      18.79\n",
            "940    \\nCNPJ n° .. - \\nNIRE ...  \\n \\nFATO RELEVAN...      13.29\n",
            "941    \\nCNPJ n° .. - \\nNIRE ...  \\n \\nFATO RELEVAN...      14.31\n",
            "942    \\nCNPJ n° .. - \\nNIRE ...  \\n \\nFATO RELEVAN...      14.74\n",
            "943   \\n CNPJ  .. - \\nCompanhia Aberta  \\n \\nFATO R...      16.89\n",
            "\n",
            "[944 rows x 2 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "desc_estatisticas = df['fog_index'].describe()\n",
        "print(desc_estatisticas)"
      ],
      "metadata": {
        "id": "ji9ufB-HsiCS",
        "outputId": "ef67ff18-985a-4b8e-ce35-de6f36549947",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "count    944.000000\n",
            "mean      14.577998\n",
            "std        6.204426\n",
            "min        0.400000\n",
            "25%       12.730000\n",
            "50%       14.740000\n",
            "75%       17.490000\n",
            "max       36.180000\n",
            "Name: fog_index, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Calculo Flesch Index"
      ],
      "metadata": {
        "id": "guL95wSelehG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "from textstat import textstat\n",
        "import numpy as np\n",
        "\n",
        "# Function to calculate the Flesch Index\n",
        "def calculate_flesch(text):\n",
        "    sentences = textstat.sentence_count(text)\n",
        "    words = textstat.lexicon_count(text, removepunct=True)\n",
        "    syllables = textstat.syllable_count(text)\n",
        "\n",
        "    if words == 0:\n",
        "        return np.nan\n",
        "\n",
        "    average_words_per_sentence = words / sentences\n",
        "    average_syllables_per_word = syllables / words\n",
        "\n",
        "    flesch_index = 206.835 - (1.015 * average_words_per_sentence) - (84.6 * average_syllables_per_word)\n",
        "    return flesch_index\n",
        "\n",
        "# Apply preprocessing and calculate the Flesch Index in the 'df' DataFrame\n",
        "df['flesch_index'] = df['texto_portugues'].apply(calculate_flesch)\n",
        "\n",
        "# View the result\n",
        "print(df[['texto_portugues', 'flesch_index']])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0LFN46HaLQJx",
        "outputId": "141da8d3-3e92-42bb-e1a9-b5bd254a4ba3"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                       texto_portugues  flesch_index\n",
            "0     – Em Recuperação Judicial  \\nCNPJ  .. - \\nNIR...     23.850455\n",
            "1    \\nCNPJMF  ..-  \\nNIRE  \\nCompanhia Aberta de C...     40.775702\n",
            "2                                                  nan    121.220000\n",
            "3     \\nCompanhia Aberta de Capital Autorizado  \\nC...     33.813852\n",
            "4    – INVEPAR  (“Invepar” \\nou “Companhia”) , em a...     34.234083\n",
            "..                                                 ...           ...\n",
            "939  , sociedade por ações, com sede na cidade de B...     18.015524\n",
            "940    \\nCNPJ n° .. - \\nNIRE ...  \\n \\nFATO RELEVAN...     37.409622\n",
            "941    \\nCNPJ n° .. - \\nNIRE ...  \\n \\nFATO RELEVAN...     41.143357\n",
            "942    \\nCNPJ n° .. - \\nNIRE ...  \\n \\nFATO RELEVAN...     35.094219\n",
            "943   \\n CNPJ  .. - \\nCompanhia Aberta  \\n \\nFATO R...     28.980101\n",
            "\n",
            "[944 rows x 2 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate the correlation between 'fog_index' and 'flesch_index'\n",
        "correlation = df['fog_index'].corr(df['flesch_index'])\n",
        "\n",
        "# Print the correlation value\n",
        "print(\"Correlation between fog_index and flesch_index:\", correlation)"
      ],
      "metadata": {
        "id": "hiOlUpCB9A2U",
        "outputId": "1ab14af3-ad4f-40bb-9e0d-bcf7e1cb582e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Correlation between fog_index and flesch_index: -0.9369843990948966\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install nltk"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xs_1F73AQWE6",
        "outputId": "894085d0-934e-47cd-9ec8-2a3c4e9f0818"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (3.8.1)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk) (8.1.3)\n",
            "Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from nltk) (1.2.0)\n",
            "Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk) (2022.10.31)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from nltk) (4.65.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Exemplo de uso do Bog Index"
      ],
      "metadata": {
        "id": "arG8vGNLR4Va"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "def calculate_bog_index(df):\n",
        "    # Define the lists of overused words, weak verbs, jargon, and passive voice indicators\n",
        "    overused_words = ['utilizar', 'implementar', 'executar', 'generalizar', 'obter']\n",
        "    weak_verbs = ['ser', 'estar', 'fazer', 'permanecer', 'continuar']\n",
        "    jargon_words = ['ROI', 'EBITDA','derivativos', 'IPO', 'compliance', 'mercado de capital','débito']\n",
        "    passive_voice_indicators = ['seja', 'sou', 'é', 'somos']\n",
        "\n",
        "    # Initialize the Bog Index column\n",
        "    df['bog_index'] = 0.0\n",
        "\n",
        "    # Iterate over each row and calculate the Bog Index for the corresponding text\n",
        "    for index, row in df.iterrows():\n",
        "        text = row['definitions']\n",
        "        sentences = text.split('.')\n",
        "        sentence_count = len(sentences)\n",
        "        passive_count = 0\n",
        "        weak_verb_count = 0\n",
        "        overused_word_count = 0\n",
        "        jargon_word_count = 0\n",
        "\n",
        "        for sentence in sentences:\n",
        "            words = sentence.split()\n",
        "\n",
        "            if any(word in passive_voice_indicators for word in words) and 'by' in words:\n",
        "                passive_count += 1\n",
        "\n",
        "            if any(word in weak_verbs for word in words):\n",
        "                weak_verb_count += 1\n",
        "\n",
        "            if any(word in overused_words for word in words):\n",
        "                overused_word_count += 1\n",
        "\n",
        "            if any(word in jargon_words for word in words):\n",
        "                jargon_word_count += 1\n",
        "\n",
        "        bog_index = (passive_count + weak_verb_count + overused_word_count + jargon_word_count) / sentence_count\n",
        "\n",
        "        # Update the Bog Index value in the DataFrame\n",
        "        df.at[index, 'bog_index'] = bog_index\n",
        "\n",
        "    return df\n",
        "\n",
        "# Apply Bog Index calculation to the 'definitions' column in the existing DataFrame\n",
        "df = calculate_bog_index(df)\n",
        "\n",
        "# View the result\n",
        "print(df[['definitions', 'bog_index']])\n"
      ],
      "metadata": {
        "id": "WiasSlMri0gS",
        "outputId": "87698faa-d019-4aed-fe67-73a5d74eaf3d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 502
        }
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'definitions'",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-60-243006ac184c>\u001b[0m in \u001b[0;36m<cell line: 46>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     44\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m \u001b[0;31m# Apply Bog Index calculation to the 'definitions' column in the existing DataFrame\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 46\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcalculate_bog_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     47\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;31m# View the result\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-60-243006ac184c>\u001b[0m in \u001b[0;36mcalculate_bog_index\u001b[0;34m(df)\u001b[0m\n\u001b[1;32m     13\u001b[0m     \u001b[0;31m# Iterate over each row and calculate the Bog Index for the corresponding text\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrow\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miterrows\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m         \u001b[0mtext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'definitions'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m         \u001b[0msentences\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m         \u001b[0msentence_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msentences\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    979\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    980\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mkey_is_scalar\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 981\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    982\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    983\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_hashable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_get_value\u001b[0;34m(self, label, takeable)\u001b[0m\n\u001b[1;32m   1087\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1088\u001b[0m         \u001b[0;31m# Similar to Index.get_value, but we do not fall back to positional\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1089\u001b[0;31m         \u001b[0mloc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1090\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_values_for_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1091\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'definitions'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "desc_estatisticas = df['bog_index'].describe()\n",
        "print(desc_estatisticas)"
      ],
      "metadata": {
        "id": "TiQCpH3ZjKhy",
        "outputId": "3528d6d5-4499-43db-84b1-5b92836bdd03",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "count    1500.000000\n",
            "mean        0.147864\n",
            "std         0.221846\n",
            "min         0.000000\n",
            "25%         0.000000\n",
            "50%         0.000000\n",
            "75%         0.285714\n",
            "max         1.500000\n",
            "Name: bog_index, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "id": "HgRN5bibjqTb",
        "outputId": "6d49a906-5cf7-427e-825e-fcf2dfa60810",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          terms  \\\n",
              "0                     Low/No Documentation Loan   \n",
              "1     Combined Loan-To-Value Ratio (CLTV Ratio)   \n",
              "2                          Nonforfeiture Clause   \n",
              "3                        Discretionary spending   \n",
              "4                                DEBT TO ASSETS   \n",
              "...                                         ...   \n",
              "1495                        Sole Proprietorship   \n",
              "1496         UCLA Anderson School of Management   \n",
              "1497                               Unemployment   \n",
              "1498                          Pro Forma Invoice   \n",
              "1499                          full-payout lease   \n",
              "\n",
              "                                            definitions        source  \\\n",
              "0     A lowno documentation loan allows a potential ...  investopedia   \n",
              "1     The combined loan-to-value (CLTV) ratio is the...  investopedia   \n",
              "2     A nonforfeiture (sometimes hyphenated) clause ...  investopedia   \n",
              "3     Government spending authorized by Congress on ...    9_12_louis   \n",
              "4     A measure of a company’s FINANCIAL LEVERAGE, o...      palgrave   \n",
              "...                                                 ...           ...   \n",
              "1495  A sole proprietorship also referred to as a so...  investopedia   \n",
              "1496  UCLA Anderson School of Management is the grad...  investopedia   \n",
              "1497  @@ In economic terms,  involuntary unemploymen...           sam   \n",
              "1498  A pro forma invoice is a preliminary bill of s...  investopedia   \n",
              "1499                                   financial lease.          prin   \n",
              "\n",
              "      assigned_readability  flesch_reading_ease  flesch_kincaid_grade  \\\n",
              "0                        1                22.75                  15.8   \n",
              "1                        1                45.77                  17.3   \n",
              "2                        1                29.18                  15.4   \n",
              "3                        1                28.50                  11.5   \n",
              "4                        0                45.46                  11.2   \n",
              "...                    ...                  ...                   ...   \n",
              "1495                     1                37.98                  16.2   \n",
              "1496                     1                41.70                  12.7   \n",
              "1497                     1                15.65                  18.5   \n",
              "1498                     1                58.62                  10.3   \n",
              "1499                     0                35.61                   8.8   \n",
              "\n",
              "      smog_index  coleman_liau_index  automated_readability_index  \\\n",
              "0            0.0               16.42                         17.8   \n",
              "1            0.0                9.01                         21.0   \n",
              "2           17.1               14.10                         16.9   \n",
              "3            0.0               15.11                         11.3   \n",
              "4           13.0               10.67                         11.1   \n",
              "...          ...                 ...                          ...   \n",
              "1495         0.0               11.79                         18.5   \n",
              "1496         0.0               12.30                         13.8   \n",
              "1497         0.0               10.28                         16.6   \n",
              "1498         0.0               11.60                         12.9   \n",
              "1499         0.0               10.00                         14.9   \n",
              "\n",
              "      dale_chall_readability_score  linsear_write_formula  gunning_fog  \\\n",
              "0                            11.99              18.000000        20.50   \n",
              "1                            10.23              12.500000        18.70   \n",
              "2                             9.93              18.500000        15.33   \n",
              "3                            12.86               6.500000        12.49   \n",
              "4                             9.96              11.666667        10.00   \n",
              "...                            ...                    ...          ...   \n",
              "1495                          9.10              20.500000        16.84   \n",
              "1496                          9.94              16.000000        16.97   \n",
              "1497                         11.70              20.500000        16.67   \n",
              "1498                         10.69              13.000000        12.21   \n",
              "1499                         19.53               1.000000        20.80   \n",
              "\n",
              "      fog_index  flesch_index  bog_index  \n",
              "0         20.56     18.557500       0.00  \n",
              "1         10.30     64.662857       0.00  \n",
              "2         15.33     32.564000       0.25  \n",
              "3         12.49     28.500000       0.00  \n",
              "4          8.28     53.724615       0.00  \n",
              "...         ...           ...        ...  \n",
              "1495      16.84     34.903636       0.00  \n",
              "1496      16.98     41.588476       0.00  \n",
              "1497      12.55     53.018563       0.00  \n",
              "1498      12.21     52.577143       0.00  \n",
              "1499      20.80     35.605000       0.00  \n",
              "\n",
              "[1500 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cb69fa8c-97b0-4247-a67c-2da6bd40b444\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>terms</th>\n",
              "      <th>definitions</th>\n",
              "      <th>source</th>\n",
              "      <th>assigned_readability</th>\n",
              "      <th>flesch_reading_ease</th>\n",
              "      <th>flesch_kincaid_grade</th>\n",
              "      <th>smog_index</th>\n",
              "      <th>coleman_liau_index</th>\n",
              "      <th>automated_readability_index</th>\n",
              "      <th>dale_chall_readability_score</th>\n",
              "      <th>linsear_write_formula</th>\n",
              "      <th>gunning_fog</th>\n",
              "      <th>fog_index</th>\n",
              "      <th>flesch_index</th>\n",
              "      <th>bog_index</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Low/No Documentation Loan</td>\n",
              "      <td>A lowno documentation loan allows a potential ...</td>\n",
              "      <td>investopedia</td>\n",
              "      <td>1</td>\n",
              "      <td>22.75</td>\n",
              "      <td>15.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.42</td>\n",
              "      <td>17.8</td>\n",
              "      <td>11.99</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>20.50</td>\n",
              "      <td>20.56</td>\n",
              "      <td>18.557500</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Combined Loan-To-Value Ratio (CLTV Ratio)</td>\n",
              "      <td>The combined loan-to-value (CLTV) ratio is the...</td>\n",
              "      <td>investopedia</td>\n",
              "      <td>1</td>\n",
              "      <td>45.77</td>\n",
              "      <td>17.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.01</td>\n",
              "      <td>21.0</td>\n",
              "      <td>10.23</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>18.70</td>\n",
              "      <td>10.30</td>\n",
              "      <td>64.662857</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Nonforfeiture Clause</td>\n",
              "      <td>A nonforfeiture (sometimes hyphenated) clause ...</td>\n",
              "      <td>investopedia</td>\n",
              "      <td>1</td>\n",
              "      <td>29.18</td>\n",
              "      <td>15.4</td>\n",
              "      <td>17.1</td>\n",
              "      <td>14.10</td>\n",
              "      <td>16.9</td>\n",
              "      <td>9.93</td>\n",
              "      <td>18.500000</td>\n",
              "      <td>15.33</td>\n",
              "      <td>15.33</td>\n",
              "      <td>32.564000</td>\n",
              "      <td>0.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Discretionary spending</td>\n",
              "      <td>Government spending authorized by Congress on ...</td>\n",
              "      <td>9_12_louis</td>\n",
              "      <td>1</td>\n",
              "      <td>28.50</td>\n",
              "      <td>11.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>15.11</td>\n",
              "      <td>11.3</td>\n",
              "      <td>12.86</td>\n",
              "      <td>6.500000</td>\n",
              "      <td>12.49</td>\n",
              "      <td>12.49</td>\n",
              "      <td>28.500000</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>DEBT TO ASSETS</td>\n",
              "      <td>A measure of a company’s FINANCIAL LEVERAGE, o...</td>\n",
              "      <td>palgrave</td>\n",
              "      <td>0</td>\n",
              "      <td>45.46</td>\n",
              "      <td>11.2</td>\n",
              "      <td>13.0</td>\n",
              "      <td>10.67</td>\n",
              "      <td>11.1</td>\n",
              "      <td>9.96</td>\n",
              "      <td>11.666667</td>\n",
              "      <td>10.00</td>\n",
              "      <td>8.28</td>\n",
              "      <td>53.724615</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1495</th>\n",
              "      <td>Sole Proprietorship</td>\n",
              "      <td>A sole proprietorship also referred to as a so...</td>\n",
              "      <td>investopedia</td>\n",
              "      <td>1</td>\n",
              "      <td>37.98</td>\n",
              "      <td>16.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>11.79</td>\n",
              "      <td>18.5</td>\n",
              "      <td>9.10</td>\n",
              "      <td>20.500000</td>\n",
              "      <td>16.84</td>\n",
              "      <td>16.84</td>\n",
              "      <td>34.903636</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1496</th>\n",
              "      <td>UCLA Anderson School of Management</td>\n",
              "      <td>UCLA Anderson School of Management is the grad...</td>\n",
              "      <td>investopedia</td>\n",
              "      <td>1</td>\n",
              "      <td>41.70</td>\n",
              "      <td>12.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.30</td>\n",
              "      <td>13.8</td>\n",
              "      <td>9.94</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>16.97</td>\n",
              "      <td>16.98</td>\n",
              "      <td>41.588476</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1497</th>\n",
              "      <td>Unemployment</td>\n",
              "      <td>@@ In economic terms,  involuntary unemploymen...</td>\n",
              "      <td>sam</td>\n",
              "      <td>1</td>\n",
              "      <td>15.65</td>\n",
              "      <td>18.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.28</td>\n",
              "      <td>16.6</td>\n",
              "      <td>11.70</td>\n",
              "      <td>20.500000</td>\n",
              "      <td>16.67</td>\n",
              "      <td>12.55</td>\n",
              "      <td>53.018563</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1498</th>\n",
              "      <td>Pro Forma Invoice</td>\n",
              "      <td>A pro forma invoice is a preliminary bill of s...</td>\n",
              "      <td>investopedia</td>\n",
              "      <td>1</td>\n",
              "      <td>58.62</td>\n",
              "      <td>10.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>11.60</td>\n",
              "      <td>12.9</td>\n",
              "      <td>10.69</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>12.21</td>\n",
              "      <td>12.21</td>\n",
              "      <td>52.577143</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1499</th>\n",
              "      <td>full-payout lease</td>\n",
              "      <td>financial lease.</td>\n",
              "      <td>prin</td>\n",
              "      <td>0</td>\n",
              "      <td>35.61</td>\n",
              "      <td>8.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.00</td>\n",
              "      <td>14.9</td>\n",
              "      <td>19.53</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>20.80</td>\n",
              "      <td>20.80</td>\n",
              "      <td>35.605000</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1500 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb69fa8c-97b0-4247-a67c-2da6bd40b444')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cb69fa8c-97b0-4247-a67c-2da6bd40b444 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cb69fa8c-97b0-4247-a67c-2da6bd40b444');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    }
  ]
}